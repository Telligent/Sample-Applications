<scriptedContentFragments>
	<scriptedContentFragment name="OpenSocial Container" version="6.0.1205.18476" description="Toy example OpenSocial container" instanceIdentifier="28b0efadfaab4dd2b94b84e41e48b2db" theme="" isCacheable="true" varyCacheByUser="true" showHeaderByDefault="true" cssClass="open-social-container">
		<contentScript>## VERY CRUDE Toy Implementation of a VERY SMALL slice of OpenSocial against Telligent's API 

## pre-define the OpenSocial DocumentReady wrapper
&lt;script type="text/javascript"&gt;
gadgets = {
    util: { registerOnLoadHandler: function(fn) { $(fn); } },
	// not implemented, but called by the demo script
	window: { adjustHeight: function() { } }
};	
&lt;/script&gt;

## no security here yet.  Just grab the code pasted in via config
#set ($openSocialCode = $core_v2_widget.GetStringValue('embed', ''))

## strip out everything except for the client-executable code.  contained within the CDATA tag
## yes, this is completely wrong.  the surrounding metadata should be processed. This is just a toy
#set ($regexOptions = $core_v2_utility.MakeList('SingleLine'))
#set ($backSlash = '\')
#set ($openSocialCode = $core_v2_utility.Replace($openSocialCode, "(.*)CDATA$backSlash[", " ", "%{ RegexOptions = $regexOptions }"))
#set ($openSocialCode = $core_v2_utility.Replace($openSocialCode, "]].*", " ", "%{ RegexOptions = $regexOptions }"))
$openSocialCode

## load the OpenSocial wrapper
#registerEndOfPageHtml('telligent.evolution.widgets.openSocialContainer')
	&lt;script type="text/javascript" src="$core_v2_encoding.HtmlAttributeEncode($core_v2_widget.GetFileUrl('ui.js'))"&gt;&lt;/script&gt;
#end

## configure the OpenSocial wrapper with Telligent-Specific configuration data
#registerEndOfPageHtml()
	&lt;script type="text/javascript"&gt;
	opensocial.telligent.configure({
		accessingUserId: $core_v2_user.Accessing.Id
	});
	&lt;/script&gt;
#end</contentScript>
		<headerScript>$core_v2_widget.ApplyTokens($core_v2_widget.GetStringValue('fragmentHeader', 'OpenSocial Container'))</headerScript>
		<configuration>&lt;propertyGroup id="options" resourceName="Options"&gt;
	&lt;property id="fragmentHeader" resourceName="CF_Title" dataType="string" defaultValue="OpenSocial Container" controlType="Telligent.Evolution.Controls.ContentFragmentTokenStringControl, Telligent.Evolution.Controls" /&gt;
	&lt;property id="embed" resourceText="OpenSocial Gadget" resource="OpenSocial Gadget 2" dataType="html" defaultValue="" width="500px" height="300px" controlType="Telligent.DynamicConfiguration.Controls.MultilineHtmlControl, Telligent.DynamicConfiguration" /&gt;
&lt;/propertyGroup&gt;</configuration>
	</scriptedContentFragment>
	<scriptedContentFragment name="LinkedIn Company Insider (1)" version="6.0.1205.18476" description="" instanceIdentifier="d93322c462144e13a6a7d6d19d7174ca" theme="" isCacheable="false" varyCacheByUser="false" showHeaderByDefault="true" cssClass="">
		<contentScript>&lt;script src="http://platform.linkedin.com/in.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script type="IN/CompanyInsider" data-id="30819" data-modules="innetwork,newhires,jobchanges"&gt;&lt;/script&gt;</contentScript>
	</scriptedContentFragment>
	<scriptedContentFragment name="LinkedIn Profile Widget" version="6.0.1205.18476" description="" instanceIdentifier="2813487bd1dc4877a980e0f74639f6fd" theme="" isCacheable="false" varyCacheByUser="false" showHeaderByDefault="true" cssClass="">
		<contentScript>## If Current is accessible we're on the profile page
#if (!$core_v2_user.Current)
    #set($user = $core_v2_user.Accessing)
#else
    #set($user = $core_v2_user.Current)
#end

#foreach($profileField in $user.ProfileFields)
    #if ($profileField.Label == 'LinkedIn')
        #set($linkedin = $profileField.Value)
    #end
#end

&lt;script type="text/javascript" src="http://platform.linkedin.com/in.js"&gt;
  api_key: 0ChFWuDC7OzLeCLkeEUE9Sl94H3GAZ7stCmEoQGP3qq2EJKluPHeRsXScpXezUOm
  authorize: true
&lt;/script&gt;
 
&lt;script type="text/javascript"&gt;
 
function loadData() {
  IN.API.Profile("$linkedin")
    .fields(["id", "firstName", "lastName", "pictureUrl","headline", "publicProfileUrl"])
    .result(function(result) {
      profile = result.values[0];
      profHTML = "&lt;span class=\"avatar\"&gt;&lt;a class=\"internal-link\" href=\"" + profile.publicProfileUrl + "\"&gt;";
      profHTML += "&lt;img height=\"40\" width=\"40\" align=\"left\" src=\"" + profile.pictureUrl + "\" style=\"border-width: 0px;\"&gt;&lt;/a&gt;&lt;/span&gt;";     
      profHTML += "&lt;span class=\"user-name\"&gt;&lt;a class=\"internal-link\" href=\"" + profile.publicProfileUrl + "\"&gt;";
      profHTML += profile.firstName + " " + profile.lastName + "&lt;/a&gt;&lt;/span&gt;";
      profHTML += "&lt;span&gt;" + profile.headline + "&lt;/span&gt;";
      $("#profile").html(profHTML);
    });
}
 
&lt;/script&gt;

&lt;div id="profile"&gt;&lt;/div&gt;
&lt;script type="IN/Login" data-onAuth="loadData"&gt;&lt;/script&gt;</contentScript>
	</scriptedContentFragment>
	<scriptedContentFragment name="LinkedIn Company Insider" version="6.0.1205.18476" description="" instanceIdentifier="bc24c757ba8b4f52bf56e0f8b7ac525f" theme="" isCacheable="false" varyCacheByUser="false" showHeaderByDefault="true" cssClass="">
		<contentScript>&lt;script src="http://www.linkedin.com/companyInsider?script&amp;useBorder=no" type="text/javascript"&gt;&lt;/script&gt;
&lt;span id="li-insider"&gt;&lt;/span&gt;
&lt;script type="text/javascript"&gt;
  new LinkedIn.CompanyInsiderBox("li-insider","Telligent");
&lt;/script&gt;</contentScript>
	</scriptedContentFragment>
</scriptedContentFragments>